@import './transparency';
@import './defaults';

// Mixin for generating new styles
@mixin btn-styles($btn-color, $btn-states-color) {
  background-color: $btn-color;
  box-sizing: border-box;
  border-width: $border-thick;
  border-color: $btn-color;
  border-style: solid;
  color: $white-color;
  font-weight: $font-weight-bold;
  line-height: 1.75;
  text-transform: uppercase;
  cursor: pointer;
  @include opacity(1);

  &:hover,
  &:focus,
  &:active,
  &.active,
  .show > &.dropdown-toggle {
    background-color: $btn-states-color;
    color: $white-color;
    border-color: $btn-states-color;
  }

  &.disabled,
  &:disabled,
  &[disabled],
  fieldset[disabled] {
    background-color: $default-disabled-color !important;
    border-color: $default-disabled-color !important;
    @include opacity(0.5);
    pointer-events: none;
  }

  .caret {
    border-top-color: $white-color;
  }
}

@mixin btn-outline-styles($btn-color, $btn-states-color) {
  background-image: none;
  background-color: transparent;

  border-color: $btn-color;
  color: $btn-color;
  @include opacity(1);

  &:hover,
  &:focus,
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    background-color: $btn-states-color !important;
    color: $fill-font-color !important;
    border-color: $btn-states-color;
    .caret {
      border-top-color: $fill-font-color;
    }
  }

  .caret {
    border-top-color: $white-color;
  }

  &.disabled,
  &:disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active {
      background-color: transparent !important;
      border-color: $btn-color;
    }
  }
}

@mixin btn-simple-styles($btn-color, $btn-states-color) {
  background-image: none;
  background-color: transparent;
  border: none;
  color: $btn-color;
  @include opacity(1);

  &:hover,
  &:focus,
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $btn-states-color !important;
  }

  &.disabled,
  &:disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active {
      background-color: transparent !important;
      border-color: $btn-color;
    }
  }
}

@mixin btn-size(
  $padding-vertical: $padding-small-vertical,
  $padding-horizontal: $padding-small-horizontal,
  $font-size: $font-size-small,
  $border-radius: $default-border-radius
) {
  font-size: $font-size;
  padding: $padding-vertical $padding-horizontal;
  @include border-radius($border-radius, 0);
}

@mixin button(
  $btn-color,
  $btn-states-color,
  $padding-vertical: $default-padding-vertical,
  $padding-horizontal: $default-padding-horizontal,
  $font-size: $default-font-size
) {
  @include btn-styles($btn-color, $btn-states-color);
  @include btn-size($padding-vertical, $padding-horizontal, $font-size);
}

@mixin button-outline(
  $btn-color,
  $btn-states-color,
  $padding-vertical: $default-padding-vertical,
  $padding-horizontal: $default-padding-horizontal,
  $font-size: $default-font-size
) {
  @include btn-outline-styles($btn-color, $btn-states-color);
  @include btn-size($padding-vertical, $padding-horizontal, $font-size);
}

@mixin button-simple($btn-color, $btn-states-color, $font-size) {
  @include btn-simple-styles($btn-color, $btn-states-color);
  @include btn-size($padding-simple-vertical, $padding-simple-horizontal, $font-size);
  padding: $padding-simple-vertical (2 * $padding-simple-horizontal);

  color: $btn-color !important;
}

@mixin button-link(
  $btn-color,
  $btn-states-color,
  $padding-vertical: $padding-small-vertical,
  $padding-horizontal: $padding-small-horizontal,
  $font-size: $default-font-size
) {
  @include btn-simple-styles($btn-color, $btn-states-color);
  @include btn-size($padding-vertical, $padding-horizontal, $font-size);
  padding: $padding-vertical 0;
}
